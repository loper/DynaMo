From c81d7b3f2bf7f25bf09a45b62c1383ff45904d5b Mon Sep 17 00:00:00 2001
From: Loper <loper.t2h@gmail.com>
Date: Wed, 15 Feb 2012 14:28:18 +0100
Subject: [PATCH 1/4] patch: otwieranie i zamykanie pliku

---
 Konfiguracja.py |   39 +++++++++++++++++++++++----------------
 1 files changed, 23 insertions(+), 16 deletions(-)

diff --git a/Konfiguracja.py b/Konfiguracja.py
index eb5bf5a..8da5c47 100644
--- a/Konfiguracja.py
+++ b/Konfiguracja.py
@@ -1,33 +1,40 @@
 #-*- coding: utf-8 -*-
 '''umożliwia wczytywanie ustawień do programu'''
+import logging
 
 class Konfiguracja(object):
     '''klasa Konfiguracja'''
-    
+
     __ustawienia = {}
 
     def __init__(self, plik):
         self.__otworz_plik(plik)
-    
+
     def __otworz_plik(self, konfig):
         '''otwiera plik i odczytuje z niego konfigurację'''
-        plik = open(konfig, 'r')
-        plik = plik.readlines()
-        for linia in plik:                   
-            if len(linia) <= 1:
-                continue
-            if linia[0] in ('#', '/'):
-                continue
-            linia = linia.rstrip().split("=")
-            if len(linia) != 2:
-                continue
-            self.__dodaj_do_ustawien(linia[0], linia[1])
-            
-        
+        try:
+            plik_konf = open(konfig, 'r')
+            for linia in plik_konf.readlines():
+                if len(linia) <= 1:
+                    continue
+                if linia[0] in ('#', '/'):
+                    continue
+                linia = linia.rstrip().split("=")
+                if len(linia) != 2:
+                    continue
+                self.__dodaj_do_ustawien(linia[0], linia[1])
+            del plik_konf
+        except:
+            logging.basicConfig(
+                    format = '%(message)s (in %(funcName)s at %(lineno)d)')
+            logging.error("Błąd: Nie można odnaleźć pliku konfiguracyjnego '%s'" % konfig)
+            exit(-1)
+
+
     def __dodaj_do_ustawien(self, klucz, wartosc):
         '''dodaje pozycje do słownika ustawień'''
         self.__ustawienia.update({klucz:wartosc})
-        
+
     def podaj_wartosc(self, klucz):
         try:
             return self.__ustawienia[klucz]
-- 
1.7.8.4


From 492508c9cd326bdd98650390a5e415a6ce6d42fb Mon Sep 17 00:00:00 2001
From: Loper <loper.t2h@gmail.com>
Date: Wed, 15 Feb 2012 14:49:33 +0100
Subject: [PATCH 2/4] bez eclipse

---
 .project                                   |   17 -----------------
 .pydevproject                              |   10 ----------
 .settings/org.eclipse.core.resources.prefs |    6 ------
 README                                     |    2 +-
 4 files changed, 1 insertions(+), 34 deletions(-)
 delete mode 100644 .project
 delete mode 100644 .pydevproject
 delete mode 100644 .settings/org.eclipse.core.resources.prefs

diff --git a/.project b/.project
deleted file mode 100644
index 70ac749..0000000
--- a/.project
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>DynaMo</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.python.pydev.PyDevBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.python.pydev.pythonNature</nature>
-	</natures>
-</projectDescription>
diff --git a/.pydevproject b/.pydevproject
deleted file mode 100644
index 8455dad..0000000
--- a/.pydevproject
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<?eclipse-pydev version="1.0"?>
-
-<pydev_project>
-<pydev_pathproperty name="org.python.pydev.PROJECT_SOURCE_PATH">
-<path>/DynaMo</path>
-</pydev_pathproperty>
-<pydev_property name="org.python.pydev.PYTHON_PROJECT_VERSION">python 2.7</pydev_property>
-<pydev_property name="org.python.pydev.PYTHON_PROJECT_INTERPRETER">Default</pydev_property>
-</pydev_project>
diff --git a/.settings/org.eclipse.core.resources.prefs b/.settings/org.eclipse.core.resources.prefs
deleted file mode 100644
index a0c880a..0000000
--- a/.settings/org.eclipse.core.resources.prefs
+++ /dev/null
@@ -1,6 +0,0 @@
-#Wed Feb 15 01:11:54 CET 2012
-eclipse.preferences.version=1
-encoding/DynaMo.py=utf-8
-encoding/Konfiguracja.py=utf-8
-encoding/Menu.py=utf-8
-encoding/Moduly.py=utf-8
diff --git a/README b/README
index 0d13104..40bfcd3 100644
--- a/README
+++ b/README
@@ -1,6 +1,6 @@
 DynaMo
 
-ver. 1.0
+ver. 1.1
 _by Loper_
 
 Program umożliwia zarządzanie dynamicznymi obiektami i wywoływanie odpowiednich obiektów, co ułatwia rozbudowę programu o nową funkcjonalność. Stworzony jest w formie "wzorca", który można dostosować do własnych potrzeb i wykorzystać w swoich projektach. Zalecany jest wszędzie tam, gdzie programy tworzone są modułowo, nie tylko przez jedną osobę.
-- 
1.7.8.4


From 9a0062bafd12eff527a3ac559c4afb29898782f5 Mon Sep 17 00:00:00 2001
From: Loper <loper.t2h@gmail.com>
Date: Wed, 15 Feb 2012 14:52:46 +0100
Subject: [PATCH 3/4] poprawki w readme

---
 README |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/README b/README
index 40bfcd3..6c33ac7 100644
--- a/README
+++ b/README
@@ -15,4 +15,4 @@ Funkcjonalność:
  - korekcja duplikatów z menu
  - tworzenie listy załadowanych modułów
  - włączanie programu w trybie "gadatliwym" (verbose)
-
+ - wczytywanie ustawień z pliku konfiguracyjnego
-- 
1.7.8.4


From c4c14e7fc44243ea506de6ce1f20adf98d599b44 Mon Sep 17 00:00:00 2001
From: Loper <loper.t2h@gmail.com>
Date: Wed, 15 Feb 2012 14:56:20 +0100
Subject: [PATCH 4/4] bez tych przykladow

---
 moduly/Dodawanie.py   |   96 -------------------------------------------------
 moduly/Odejmowanie.py |   27 --------------
 2 files changed, 0 insertions(+), 123 deletions(-)
 delete mode 100644 moduly/Dodawanie.py
 delete mode 100644 moduly/Odejmowanie.py

diff --git a/moduly/Dodawanie.py b/moduly/Dodawanie.py
deleted file mode 100644
index 72fb349..0000000
--- a/moduly/Dodawanie.py
+++ /dev/null
@@ -1,96 +0,0 @@
-#-*- coding: utf-8 -*-
-
-import os
-
-class Dodawanie:
-
-    __pozycja_w_menu = 1
-    __nazwa_w_menu = 'dodaj'
-    __wersja = '0.3'
-    __info = "Plugin do dodawania liczb calkowitych"
-    __zaleznosci = ["Odejmowanie"]
-
-    __liczby = []
-
-    def __init__(self):
-        pass
-
-    def info(self):
-        return self.__info
-
-    def wersja(self):
-        return self.__wersja
-
-    def zaleznosci(self):
-        return self.__zaleznosci
-
-    def do_menu(self):
-        '''lista opcji, które idą do menu'''
-        return (self.__pozycja_w_menu, self.__nazwa_w_menu)
-
-    def menu(self, glowne_menu, zaladowane):
-        os.system("clear")
-        print "DODAWANIE:"
-        print "1. Wprowadz liczby"
-        print "2. Podaj wynik"
-        print "3. Solver"
-        print "0. POWRÓT"
-
-        self.__wybor_menu(glowne_menu,zaladowane)
-
-    def __wybor_menu(self, glowne_menu,zaladowane):
-        while(1):
-            opcja = glowne_menu.pytanie_o_opcje()
-            if opcja == 0:
-                return
-            elif opcja == 1:
-                self.__liczby = self.__pobierz_liczby()
-            elif opcja == 2:
-                self.__oblicz_wynik(self.__liczby)
-            elif opcja == 3:
-                self.__solver(zaladowane)
-            else:
-                print "Bledna opcja"
-                continue
-        self.menu()
-
-    def __pobierz_liczby(self):
-        liczby = []
-        for i in range(1, 3):
-            liczba = raw_input('Podaj liczbę nr %d: ' % i)
-            try:
-                liczba = int(liczba)
-            except Exception:
-                print "Błędna liczba"
-                self.__pobierz_liczby()
-            liczby.append(liczba)
-        print "Liczby %s zostały zapisane w pamięci" % liczby
-        return liczby
-
-    def __oblicz_wynik(self, liczby):
-        if liczby == []:
-            print "Nie wprowadzono liczb"
-            return
-        wynik = self.dodaj(liczby)
-        print "Wynik działania: %d" % wynik
-
-    def dodaj(self, liczby):
-        wynik = liczby[0] + liczby[1]
-        return wynik
-
-    def __solver(self, zaladowane):
-        #malo eleganckie...
-        for k, v in zaladowane:
-            if str(v).split('.')[1] == 'Odejmowanie':
-                break
-        wynik = raw_input('Podaj wynik: ')
-        try:
-            wynik = int(wynik)
-        except Exception:
-            print "Błędna liczba"
-        odj = raw_input('Podaj odjemną: ')
-        try:
-            odj = int(odj)
-        except Exception:
-            print "Błędna liczba"
-        print 'Wynik działania: ' + str(v.odejmij([wynik, odj]))
diff --git a/moduly/Odejmowanie.py b/moduly/Odejmowanie.py
deleted file mode 100644
index f692c2b..0000000
--- a/moduly/Odejmowanie.py
+++ /dev/null
@@ -1,27 +0,0 @@
-class Odejmowanie:
-    
-    __info = "Plugin do odejmowania liczb calkowitych"
-    __wersja = '0.1'
-    __zaleznosci = []
-
-    def __init__(self):
-        pass
-
-    def zaleznosci(self):
-        return self.__zaleznosci
-
-    def do_menu(self):
-        return (2, 'odejmij')
-
-    def info(self):
-        return self.__info
-
-    def wersja(self):
-        return self.__wersja
-
-    def menu(self, glowne_menu, zaladowane):
-        print "odejmowanie menu... "
-
-    def odejmij(self, liczby):
-        wynik = liczby[0]-liczby[1]
-        return wynik
\ No newline at end of file
-- 
1.7.8.4

